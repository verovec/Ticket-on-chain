{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_date",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxTickets",
						"type": "uint256"
					}
				],
				"name": "addEvent",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sellsTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "validateTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct OlympicEvent.OlympicEventStruct",
						"name": "tmpOlympicEvent",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "addOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "checkEventExists",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_ticketId",
						"type": "bytes32"
					}
				],
				"name": "checkTicket",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "_ticketNumber",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "_ticketType",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "_pubKey",
						"type": "address"
					}
				],
				"name": "createTicketStaff",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isStaff",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "contest",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "ticketNumber",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "buyAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expireAt",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "ticketType",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "used",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "scannedBy",
								"type": "address"
							}
						],
						"internalType": "struct Ticket.TicketStruct",
						"name": "ticket",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "createTicketVisitor",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isStaff",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "contest",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "ticketNumber",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "buyAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expireAt",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "ticketType",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "used",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "scannedBy",
								"type": "address"
							}
						],
						"internalType": "struct Ticket.TicketStruct",
						"name": "ticket",
						"type": "tuple"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "deleteOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "getEvent",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sellsTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "validateTickets",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct OlympicEvent.OlympicEventStruct",
						"name": "olympicEvent",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwnRole",
				"outputs": [
					{
						"internalType": "enum Role.ROLE",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwnTickets",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "getRemainingPlaceNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "remainingPlaceNumber",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					}
				],
				"name": "getRoleByAddress",
				"outputs": [
					{
						"internalType": "enum Role.ROLE",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_ticketId",
						"type": "bytes32"
					}
				],
				"name": "getTicket",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isStaff",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "contest",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "ticketNumber",
								"type": "uint256"
							},
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "buyAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expireAt",
								"type": "uint256"
							},
							{
								"internalType": "uint8",
								"name": "ticketType",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "used",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "scannedBy",
								"type": "address"
							}
						],
						"internalType": "struct Ticket.TicketStruct",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_ownerKey",
						"type": "address"
					}
				],
				"name": "getTicketsByAddress",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "removeEvent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_ticketId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_ownerKey",
						"type": "address"
					}
				],
				"name": "scanTicket",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_contest",
						"type": "string"
					}
				],
				"name": "selledTicketEvent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					}
				],
				"name": "setAgent",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					}
				],
				"name": "setDelegation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					}
				],
				"name": "setOther",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					},
					{
						"internalType": "uint8",
						"name": "role",
						"type": "uint8"
					}
				],
				"name": "setStaff",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_publicKey",
						"type": "address"
					}
				],
				"name": "setVisitor",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_pubKey",
						"type": "address"
					}
				],
				"name": "setWalletDestination",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contract/Ticket.sol": "Ticket"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contract/OlympicEvent.sol": {
			"keccak256": "0x153e9fbd792028f43a79dce1c0d315ac3a3abc75ef0adc14f7495a3f333bf60d",
			"urls": [
				"bzz-raw://3d6d6a7038008e9fde3a9b84b9da3b78eb40054479c9ded08ceb076aa0a71753",
				"dweb:/ipfs/QmafWvEZV2seqXXEoYMT2JttF2ma1qK9WjMmCwJW5zTdir"
			]
		},
		"contract/Ownable.sol": {
			"keccak256": "0x56311046f68bda37b45d30cc5e6fa84375488b6289f61f9b33f72430f7b9fe26",
			"urls": [
				"bzz-raw://0d5e0478d0830fcda6b8b45c4fcc413e66c0e1cf6cb5910c15b233cc4383ee17",
				"dweb:/ipfs/QmTaWAM8He7SrAuWzsTytbZfSLoZbTKeJjq1P8R1EJ5W5G"
			]
		},
		"contract/Role.sol": {
			"keccak256": "0xb837795e28c2556d39e42351c47099118b9dc43eb4a8fcad9089c8beb4c84340",
			"urls": [
				"bzz-raw://ed5fabfa75fbeeee604a1ccab69de17ef54489156b6b5766144f7ab6ff2b25e2",
				"dweb:/ipfs/QmQ6xer95Meg1itCnCWFkxyYDDgQ34iuwoq17kNgDHR5yz"
			]
		},
		"contract/Ticket.sol": {
			"keccak256": "0x60de84be7f5cb2c9773cf54968a95bb926b342d0583dc58632bfb3162a5ccba1",
			"urls": [
				"bzz-raw://c58606dcd617dfe1090f6f93822679e217273c963aa4cce8fcf1e8580742b8c2",
				"dweb:/ipfs/QmfNCwQAitW9PBJheQha8NhAUtv8doy7GQswx9qfkPXcT9"
			]
		}
	},
	"version": 1
}